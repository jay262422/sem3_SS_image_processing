// This GUI file is generated by guibuilder version 4.2.1
//////////
f=figure('figure_position',[470,214],'figure_size',[640,480],'auto_resize','on','background',[33],'figure_name','Graphic window number %d','dockable','off','infobar_visible','off','toolbar_visible','off','menubar_visible','off','default_axes','on','visible','off');
//////////
handles.dummy = 0;
handles.pb_read=uicontrol(f,'unit','normalized','BackgroundColor',[-1,-1,-1],'Enable','on','FontAngle','normal','FontName','Lucida Grande','FontSize',[12],'FontUnits','points','FontWeight','normal','ForegroundColor',[-1,-1,-1],'HorizontalAlignment','center','ListboxTop',[],'Max',[1],'Min',[0],'Position',[0.7796875,0.8352212,0.19375,0.0707965],'Relief','default','SliderStep',[0.01,0.1],'String','Read Image','Style','pushbutton','Value',[0],'VerticalAlignment','middle','Visible','on','Tag','pb_read','Callback','pb_read_callback(handles)')
handles.pb_show=uicontrol(f,'unit','normalized','BackgroundColor',[-1,-1,-1],'Enable','on','FontAngle','normal','FontName','Lucida Grande','FontSize',[12],'FontUnits','points','FontWeight','normal','ForegroundColor',[-1,-1,-1],'HorizontalAlignment','center','ListboxTop',[],'Max',[1],'Min',[0],'Position',[0.7813852,0.7447898,0.19375,0.0707965],'Relief','default','SliderStep',[0.01,0.1],'String','Show Image','Style','pushbutton','Value',[0],'VerticalAlignment','middle','Visible','on','Tag','pb_show','Callback','pb_show_callback(handles)')
handles.pb_Gray=uicontrol(f,'unit','normalized','BackgroundColor',[-1,-1,-1],'Enable','on','FontAngle','normal','FontName','Lucida Grande','FontSize',[12],'FontUnits','points','FontWeight','normal','ForegroundColor',[-1,-1,-1],'HorizontalAlignment','center','ListboxTop',[],'Max',[1],'Min',[0],'Position',[0.7830829,0.6543584,0.19375,0.0707965],'Relief','default','SliderStep',[0.01,0.1],'String','RGB to GRAY','Style','pushbutton','Value',[0],'VerticalAlignment','middle','Visible','on','Tag','pb_Gray','Callback','pb_Gray_callback(handles)')
handles.pb_HSV=uicontrol(f,'unit','normalized','BackgroundColor',[-1,-1,-1],'Enable','on','FontAngle','normal','FontName','Lucida Grande','FontSize',[12],'FontUnits','points','FontWeight','normal','ForegroundColor',[-1,-1,-1],'HorizontalAlignment','center','ListboxTop',[],'Max',[1],'Min',[0],'Position',[0.7847806,0.563927,0.19375,0.0707965],'Relief','default','SliderStep',[0.01,0.1],'String','RGB to HSV','Style','pushbutton','Value',[0],'VerticalAlignment','middle','Visible','on','Tag','pb_HSV','Callback','pb_HSV_callback(handles)')
handles.pb_negative=uicontrol(f,'unit','normalized','BackgroundColor',[-1,-1,-1],'Enable','on','FontAngle','normal','FontName','Lucida Grande','FontSize',[12],'FontUnits','points','FontWeight','normal','ForegroundColor',[-1,-1,-1],'HorizontalAlignment','center','ListboxTop',[],'Max',[1],'Min',[0],'Position',[0.7864783,0.4734955,0.19375,0.0707965],'Relief','default','SliderStep',[0.01,0.1],'String','Image Negative','Style','pushbutton','Value',[0],'VerticalAlignment','middle','Visible','on','Tag','pb_negative','Callback','pb_negative_callback(handles)')
handles.pb_thres=uicontrol(f,'unit','normalized','BackgroundColor',[-1,-1,-1],'Enable','on','FontAngle','normal','FontName','Lucida Grande','FontSize',[12],'FontUnits','points','FontWeight','normal','ForegroundColor',[-1,-1,-1],'HorizontalAlignment','center','ListboxTop',[],'Max',[1],'Min',[0],'Position',[0.7881761,0.3830641,0.19375,0.0707965],'Relief','default','SliderStep',[0.01,0.1],'String','Thresholding','Style','pushbutton','Value',[0],'VerticalAlignment','middle','Visible','on','Tag','pb_thres','Callback','pb_thres_callback(handles)')
handles.pb_enhance=uicontrol(f,'unit','normalized','BackgroundColor',[-1,-1,-1],'Enable','on','FontAngle','normal','FontName','Lucida Grande','FontSize',[12],'FontUnits','points','FontWeight','normal','ForegroundColor',[-1,-1,-1],'HorizontalAlignment','center','ListboxTop',[],'Max',[1],'Min',[0],'Position',[0.7898738,0.2022013,0.19375,0.0707965],'Relief','default','SliderStep',[0.01,0.1],'String','dilate','Style','pushbutton','Value',[0],'VerticalAlignment','middle','Visible','on','Tag','pb_enhance','Callback','pb_enhance_callback(handles)')
handles.pb_lowfilter=uicontrol(f,'unit','normalized','BackgroundColor',[-1,-1,-1],'Enable','on','FontAngle','normal','FontName','Lucida Grande','FontSize',[12],'FontUnits','points','FontWeight','normal','ForegroundColor',[-1,-1,-1],'HorizontalAlignment','center','ListboxTop',[],'Max',[1],'Min',[0],'Position',[0.7915715,0.1117699,0.19375,0.0707965],'Relief','default','SliderStep',[0.01,0.1],'String','Low pass Filter','Style','pushbutton','Value',[0],'VerticalAlignment','middle','Visible','on','Tag','pb_lowfilter','Callback','pb_lowfilter_callback(handles)')
handles.pb_highfilter=uicontrol(f,'unit','normalized','BackgroundColor',[-1,-1,-1],'Enable','on','FontAngle','normal','FontName','Lucida Grande','FontSize',[12],'FontUnits','points','FontWeight','normal','ForegroundColor',[-1,-1,-1],'HorizontalAlignment','center','ListboxTop',[],'Max',[1],'Min',[0],'Position',[0.540625,0.1117699,0.19375,0.0707965],'Relief','default','SliderStep',[0.01,0.1],'String','High Pass Filter','Style','pushbutton','Value',[0],'VerticalAlignment','middle','Visible','on','Tag','pb_highfilter','Callback','pb_highfilter_callback(handles)')
handles.pb_pepper=uicontrol(f,'unit','normalized','BackgroundColor',[-1,-1,-1],'Enable','on','FontAngle','normal','FontName','Lucida Grande','FontSize',[12],'FontUnits','points','FontWeight','normal','ForegroundColor',[-1,-1,-1],'HorizontalAlignment','center','ListboxTop',[],'Max',[1],'Min',[0],'Position',[0.3015625,0.1117699,0.19375,0.0707965],'Relief','default','SliderStep',[0.01,0.1],'String','Salt and Pepper','Style','pushbutton','Value',[0],'VerticalAlignment','middle','Visible','on','Tag','pb_pepper','Callback','pb_pepper_callback(handles)')
handles.pb_edge=uicontrol(f,'unit','normalized','BackgroundColor',[-1,-1,-1],'Enable','on','FontAngle','normal','FontName','Lucida Grande','FontSize',[12],'FontUnits','points','FontWeight','normal','ForegroundColor',[-1,-1,-1],'HorizontalAlignment','center','ListboxTop',[],'Max',[1],'Min',[0],'Position',[0.0625,0.1117699,0.19375,0.0707965],'Relief','default','SliderStep',[0.01,0.1],'String','Edge Deduction','Style','pushbutton','Value',[0],'VerticalAlignment','middle','Visible','on','Tag','pb_edge','Callback','pb_edge_callback(handles)')
handles.axis= newaxes();handles.axis.margins = [ 0 0 0 0];handles.axis.axes_bounds = [0.040625,0.0685841,0.7321875,0.7300885];
handles.pb_pull=uicontrol(f,'unit','normalized','BackgroundColor',[-1,-1,-1],'Enable','on','FontAngle','normal','FontName','Tahoma','FontSize',[12],'FontUnits','points','FontWeight','normal','ForegroundColor',[-1,-1,-1],'HorizontalAlignment','center','ListboxTop',[],'Max',[1],'Min',[0],'Position',[0.7932692,0.2926327,0.19375,0.0707965],'Relief','default','SliderStep',[0.01,0.1],'String','Erode','Style','pushbutton','Value',[0],'VerticalAlignment','middle','Visible','on','Tag','pb_pull','Callback','pb_pull_callback(handles)')


f.visible = "on";


//////////
// Callbacks are defined as below. Please do not delete the comments as it will be used in coming version
//////////




function pb_read_callback(handles)
a = uigetfile("*");
handles.a=a;
/*b = imread(a);
handles.b=b;*/
handles = resume(handles);
endfunction


function pb_show_callback(handles)
//Write your callback for  pb_show  here
b = imread(handles.a);
imshow(b);
handles.b=b;
handles = resume(handles);
endfunction


function pb_Gray_callback(handles)
//Write your callback for  pb_Gray  here
b = rgb2gray(handles.b);
imshow(b);
handles.b = b;
handles = resume(handles);
endfunction



function pb_HSV_callback(handles)
//Write your callback for  pb_HSV  here
b = rgb2hsv(handles.b);
imshow(b);
handles.b = b;
handles = resume(handles);
endfunction


function pb_negative_callback(handles)
//Write your callback for  pb_negative  here
b = imcomplement(handles.b);
imshow(b);
handles.b = b;
handles = resume(handles);
endfunction


function pb_thres_callback(handles)
//Write your callback for  pb_thres  here
b=im2bw(handles.b,0.5);
imshow(b);
handles.b = b;
handles = resume(handles);
endfunction


function pb_enhance_callback(handles)
//Write your callback for  pb_enhance  here
Structure_Element = struct ( ' Squa R E ' ,3) ;
b = imdilate(handles.b, Structure_Element );
imshow(b);
handles.b = b;
handles = resume(handles);
endfunction

function pb_lowfilter_callback(handles)
//Write your callback for  pb_lowfilter  here
mask = fspecial('average');
lowimage = imfilter(handles.b,mask);
imshow(lowimage);
endfunction


function pb_highfilter_callback(handles)
//Write your callback for  pb_highfilter  here
mask1=[-1,-1,-1,-1,8,-1,-1,-1,-1]/9;
highpaim=imfilter(handles.b,mask1);
imshow(highpaim);
endfunction


function pb_pepper_callback(handles)
//Write your callback for  pb_pepper  here
b = imnoise(handles.b,'salt & pepper');
imshow(b);
handles.b = b;
handles = resume(handles);
endfunction


function pb_edge_callback(handles)
//Write your callback for  pb_edge  here
edgedetected = edge(handles.b,'canny');
imshow(edgedetected);
endfunction


function pb_pull_callback(handles)
//Write your callback for  pb_pull  here
Structure_Element = struct ( ' Squa R E ' ,3) ;
b = imerode(handles.b, Structure_Element );
imshow(b);
handles.b = b;
handles = resume(handles);
endfunction


